We can find the reason why code failed to work by comparing the old version.
从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
1.能对比以前的错误，不会重犯
2.可以回到原先版本，试用几种不同的方式进行优化。
你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
手动提交优点：可以使提交更有逻辑性，方便每次回去查看时理解
手动提交缺点：容易忘记，操作更复杂
如何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
增加文件的关联性，对于一般的工程来说十分有好处
使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
1.每次保存，要逻辑清楚。不能混合太多内容。否则就算确定某一个commit，也难以纠错，并且可能出现用于纠错的改动造成新的问题。
2.每次commit改动之前要善于发现文件中存在的问题，避免多个问题混杂导致难以纠错。
如何使用Git
记录代码，可以方便纠错